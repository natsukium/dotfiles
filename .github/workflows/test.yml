name: build and cache
on:
  pull_request:
    branches:
      - main
    paths:
      - '.github/actions/setup-nix/**'
      - '.github/workflows/test.yml'
      - 'applications/**'
      - 'flake-module.nix'
      - 'flake.lock'
      - 'flake.nix'
      - 'homes/**'
      - 'lib/**'
      - 'modules/**'
      - 'overlays/**'
      - 'pkgs/**'
      - 'systems/**'
  push:
    branches:
      - main
    paths:
      - '.github/actions/setup-nix/**'
      - '.github/workflows/test.yml'
      - 'applications/**'
      - 'flake-module.nix'
      - 'flake.lock'
      - 'flake.nix'
      - 'homes/**'
      - 'lib/**'
      - 'modules/**'
      - 'overlays/**'
      - 'pkgs/**'
      - 'systems/**'
jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: ./.github/actions/setup-nix
        with:
          signingKey: ${{ secrets.CACHIX_SIGNING_KEY }}
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - name: Check flake
        run: nix flake check --no-build --all-systems --keep-going
  build:
    needs: check
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-arm, macos-14]
    steps:
      # workaround for "No space left on device"
      - name: Collect garbage
        if: matrix.os == 'ubuntu-latest'
        uses: easimon/maximize-build-space@fc881a613ad2a34aca9c9624518214ebc21dfc0c # v10
        with:
          root-reserve-mb: 8192
          swap-size-mb: 1024
          build-mount-path: "/nix"
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: ./.github/actions/setup-nix
        with:
          signingKey: ${{ secrets.CACHIX_SIGNING_KEY }}
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - name: Create /run for darwin
        if: matrix.os == 'macos-14'
        run: |
          printf "run\tprivate/var/run\n" | sudo tee -a /etc/synthetic.conf
          /System/Library/Filesystems/apfs.fs/Contents/Resources/apfs.util -t || true
      - name: build
        run: |
          export MAKEFLAGS="NIX:=nix"
          make
          df -h
  deploy:
    needs: build
    runs-on: macos-14
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: ./.github/actions/setup-nix
        with:
          signingKey: ${{ secrets.CACHIX_SIGNING_KEY }}
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - name: deploy
        env:
          CACHIX_ACTIVATE_TOKEN: ${{ secrets.CACHIX_ACTIVATE_TOKEN }}
        run: |
          spec=$(nix build ".#cachix-deploy" --print-out-paths)
          cachix push natsukium "$spec"
          cachix deploy activate "$spec"
