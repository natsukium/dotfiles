#+TITLE:My Emacs Configuration
#+STARTUP:overview

* basic

#+begin_src emacs-lisp
(set-face-attribute 'default nil
                    :family "Liga HackGen Console NF"
                    :height 140)
(add-to-list 'default-frame-alist
'(undecorated-round . t))
(use-package doom-themes
  :ensure t
  :config
  (load-theme 'doom-nord :no-confirm))
#+end_src

** Darwin
macOSでは環境変数($PATH など)を読み込めないため[[https://github.com/purcell/exec-path-from-shell][exec-path-from-shell]]を使ったワークアランウドが必要。
[[https://github.com/d12frosted/homebrew-emacs-plus/blob/3e61ee44f4cfc43dce292047aff5e9277e7d1bd4/Library/EmacsBase.rb#L33-L49][emacs-plus]]ではEmacsのInfo.plistにPATHを挿入しており、そのパッチを当てればこのパッケージは不要となるかもしれない。
#+begin_src emacs-lisp
(use-package exec-path-from-shell
  :ensure t
  :config
  (when (memq window-system '(mac ns x))
    (exec-path-from-shell-initialize)))
#+end_src

* UI
** mode-line
#+begin_src emacs-lisp
(use-package moody
  :ensure t
  :config
  (moody-replace-mode-line-front-space)
  (moody-replace-mode-line-buffer-identification)
  (moody-replace-vc-mode))
#+end_src

** headerline
#+begin_src emacs-lisp
(use-package breadcrumb
  :ensure t
  :config
  (breadcrumb-mode))
#+end_src

* minibuffer
Referring to https://protesilaos.com/codelog/2024-11-28-basic-emacs-configuration/
#+begin_src emacs-lisp
(use-package vertico
  :ensure t
  :hook (after-init . vertico-mode))
#+end_src

#+begin_src emacs-lisp
(use-package marginalia
  :ensure t
  :hook (after-init . marginalia-mode))
#+end_src

* version control system
** git
#+begin_src emacs-lisp
(use-package magit
  :ensure t
  :bind
  (("C-x g" . magit-status)))

(use-package diff-hl
  :ensure t
  :init
  (global-diff-hl-mode)
  (diff-hl-flydiff-mode)
  (add-hook 'dired-mode-hook 'diff-hl-dired-mode)
  (add-hook 'magit-post-refresh-hook 'diff-hl-magit-post-refresh))
#+end_src

* misc
#+begin_src emacs-lisp
(which-key-mode)

(setq-default indent-tabs-mode nil)

(require 'org-tempo)

(org-babel-do-load-languages
 'org-babel-load-languages
 '((shell . t)))

(setq org-src-preserve-indentation t)

(use-package org-roam
  :ensure t
  :custom
  (org-roam-directory "~/dropbox/org-roam")
  (org-roam-db-location "~/.local/share/org-roam.db")
  :bind
  (("C-c n l" . org-roam-buffer-toggle)
   ("C-c n f" . org-roam-node-find)
   ("C-c n g" . org-roam-graph)
   ("C-c n i" . org-roam-node-insert)
   ("C-c n c" . org-roam-capture)
   ("C-c n j" . org-roam-dailies-capture-today))
  :config
  (setq org-roam-node-display-template
        (concat "${title:*} "
                (propertize "${tags:10}" 'face 'org-tag)))
  (org-roam-db-autosync-mode)
  (require 'org-roam-protocol)
  )

(use-package nix-mode
  :ensure t
  :mode "\\.nix\\'")
#+end_src
