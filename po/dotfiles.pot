# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2025-08-03 14:55+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: keyword TITLE
#: README.org:1
#, no-wrap
msgid "My literate configurations with Org and Nix"
msgstr ""

#. type: keyword STARTUP
#: README.org:2 configuration.org:1 applications/emacs/init.org:1
#: applications/emacs/early-init.org:1
#, no-wrap
msgid "overview"
msgstr ""

#. type: heading *
#: README.org:4
#, no-wrap
msgid "About"
msgstr ""

#. type: heading **
#: README.org:6
#, no-wrap
msgid "Translation"
msgstr ""

#. type: paragraph
#: README.org:8
msgid "This project uses po4a to manage translations."
msgstr ""

#. type: heading ***
#: README.org:10
#, no-wrap
msgid "Requirements"
msgstr ""

#. type: plain list -
#: README.org:13
#, no-wrap
msgid "gettext"
msgstr ""

#. type: plain list -
#: README.org:14
#, no-wrap
msgid "po4a >= 0.74 (required for Org mode support)"
msgstr ""

#. type: heading ***
#: README.org:15
#, no-wrap
msgid "Translation workflow"
msgstr ""

#. type: heading ****
#: README.org:17
#, no-wrap
msgid "Create po4a configuration"
msgstr ""

#. type: paragraph
#: README.org:19
msgid ""
"Configure the target language, location for generated po files, and "
"documents to translate as follows.  The =-k 0= option forces output of "
"translated files even if the translation is incomplete (default threshold is "
"80%)."
msgstr ""

#. type: paragraph in src
#: README.org:28
#, no-wrap
msgid ""
"[po4a_langs] ja\n"
"[po4a_paths] po/dotfiles.pot $lang:po/$lang.po\n"
"[type: org] README.org $lang:README.$lang.org opt:\"-k 0\"\n"
"[type: org] configuration.org $lang:configuration.$lang.org opt:\"-k 0\"\n"
"[type: org] applications/emacs/init.org "
"$lang:applications/emacs/init.$lang.org opt:\"-k 0\"\n"
"[type: org] applications/emacs/early-init.org "
"$lang:applications/emacs/early-init.$lang.org opt:\"-k 0\""
msgstr ""

#. type: paragraph
#: README.org:36
msgid "For detailed information about =po4a.cfg= configuration, see =man po4a=."
msgstr ""

#. type: heading ****
#: README.org:38
#, no-wrap
msgid "Create/Update po"
msgstr ""

#. type: paragraph
#: README.org:40
msgid ""
"When documents are updated and you need to create/update po files, run the "
"following command.  This generates template (pot) and po files for each "
"language at the paths configured in =po4a.cfg=."
msgstr ""

#. type: paragraph in src
#: README.org:46
#, no-wrap
msgid "po4a --no-translations po4a.cfg"
msgstr ""

#. type: heading ****
#: README.org:49
#, no-wrap
msgid "Translate"
msgstr ""

#. type: paragraph
#: README.org:51
msgid ""
"Edit the target language po using a po editor.  Popular options include "
"Emacs po-mode, poedit, GNOME's Gtranslator, and KDE's Lokalize."
msgstr ""

#. type: heading ****
#: README.org:58
#, no-wrap
msgid "Create/Update translation file"
msgstr ""

#. type: paragraph
#: README.org:60
msgid ""
"After completing translations, generate files with the following command.  "
"Since po files are also updated at this time, in practice you only need to "
"run this command."
msgstr ""

#. type: paragraph in src
#: README.org:66
#, no-wrap
msgid "po4a po4a.cfg"
msgstr ""

#. type: keyword INCLUDE
#: README.org:69
#, no-wrap
msgid "\"./configuration.org\" :minlevel 1"
msgstr ""

#. type: heading *
#: configuration.org:3
#, no-wrap
msgid "Configuration"
msgstr ""

#. type: heading **
#: configuration.org:5
#, no-wrap
msgid "Emacs"
msgstr ""

#. type: heading ***
#: configuration.org:6
#, no-wrap
msgid "early-init.org"
msgstr ""

#. type: keyword INCLUDE
#: configuration.org:7
#, no-wrap
msgid "\"./applications/emacs/early-init.org\""
msgstr ""

#. type: heading ***
#: configuration.org:8
#, no-wrap
msgid "init.org"
msgstr ""

#. type: keyword INCLUDE
#: configuration.org:9
#, no-wrap
msgid "\"./applications/emacs/init.org\""
msgstr ""

#. type: heading *
#: applications/emacs/init.org:3
#, no-wrap
msgid "basic"
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:6
#, no-wrap
msgid ""
"(set-face-attribute 'default nil\n"
"                    :family \"Liga HackGen Console NF\"\n"
"                    :height 140)\n"
"(add-to-list 'default-frame-alist\n"
"'(undecorated-round . t))\n"
"(use-package doom-themes\n"
"  :ensure t\n"
"  :config\n"
"  (load-theme 'doom-nord :no-confirm))"
msgstr ""

#. type: paragraph
#: applications/emacs/init.org:17
msgid ""
"Enable visual-line-mode globally instead of using auto-fill-mode here to "
"preserve logical line structure while still wrapping long lines visually for "
"better readability without modifying the actual file."
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:23
#, no-wrap
msgid "(visual-line-mode 1)"
msgstr ""

#. type: paragraph
#: applications/emacs/init.org:26
msgid "Highlight the cursor line."
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:29
#, no-wrap
msgid "(global-hl-line-mode 1)"
msgstr ""

#. type: heading **
#: applications/emacs/init.org:32
#, no-wrap
msgid "Darwin"
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:33
#, no-wrap
msgid ""
"macOSでは環境変数($PATH "
"など)を読み込めないため[[https://github.com/purcell/exec-path-from-shell][exec-path-from-shell]]を使ったワークアランウドが必要。\n"
"[[https://github.com/d12frosted/homebrew-emacs-plus/blob/3e61ee44f4cfc43dce292047aff5e9277e7d1bd4/Library/EmacsBase.rb#L33-L49][emacs-plus]]ではEmacsのInfo.plistにPATHを挿入しており、そのパッチを当てればこのパッケージは不要となるかもしれない。\n"
"(use-package exec-path-from-shell\n"
"  :ensure t\n"
"  :config\n"
"  (when (memq window-system '(mac ns x))\n"
"    (exec-path-from-shell-initialize)))"
msgstr ""

#. type: heading *
#: applications/emacs/init.org:43
#, no-wrap
msgid "UI"
msgstr ""

#. type: heading **
#: applications/emacs/init.org:44
#, no-wrap
msgid "mode-line"
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:46
#, no-wrap
msgid ""
"(use-package moody\n"
"  :ensure t\n"
"  :config\n"
"  (moody-replace-mode-line-front-space)\n"
"  (moody-replace-mode-line-buffer-identification)\n"
"  (moody-replace-vc-mode))"
msgstr ""

#. type: heading **
#: applications/emacs/init.org:54
#, no-wrap
msgid "headerline"
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:56
#, no-wrap
msgid ""
"(use-package breadcrumb\n"
"  :ensure t\n"
"  :config\n"
"  (breadcrumb-mode))"
msgstr ""

#. type: heading *
#: applications/emacs/init.org:62
#, no-wrap
msgid "minibuffer"
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:63
#, no-wrap
msgid ""
"Referring to "
"https://protesilaos.com/codelog/2024-11-28-basic-emacs-configuration/\n"
"(use-package vertico\n"
"  :ensure t\n"
"  :hook (after-init . vertico-mode))"
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:71
#, no-wrap
msgid ""
"(use-package marginalia\n"
"  :ensure t\n"
"  :hook (after-init . marginalia-mode))"
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:77
#, no-wrap
msgid ""
"(use-package orderless\n"
"  :ensure t\n"
"  :config\n"
"  (setq completion-styles '(orderless basic))\n"
"  (setq completion-category-defaults nil)\n"
"  (setq completion-category-overrides nil))"
msgstr ""

#. type: paragraph in quote
#: applications/emacs/init.org:86
msgid ""
"The built-in savehist package keeps a record of user inputs and stores them "
"across sessions. Thus, the user will always see their latest choices closer "
"to the top (such as with M-x)."
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:89
#, no-wrap
msgid ""
"(use-package savehist\n"
"  :ensure nil ; it is built-in\n"
"  :hook (after-init . savehist-mode))"
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:95
#, no-wrap
msgid ""
"(use-package corfu\n"
"  :ensure t\n"
"  :hook (after-init . global-corfu-mode)\n"
"  :bind (:map corfu-map (\"<tab>\" . corfu-complete))\n"
"  :config\n"
"  (setq tab-always-indent 'complete)\n"
"  (setq corfu-preview-current nil)\n"
"  (setq corfu-min-width 20)"
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:104
#, no-wrap
msgid ""
"(setq corfu-popupinfo-delay '(1.25 . 0.5))\n"
"(corfu-popupinfo-mode 1) ; shows documentation after `corfu-popupinfo-delay'"
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:107
#, no-wrap
msgid ""
";; Sort by input history (no need to modify `corfu-sort-function').\n"
"(with-eval-after-load 'savehist\n"
"  (corfu-history-mode 1)\n"
"  (add-to-list 'savehist-additional-variables 'corfu-history)))"
msgstr ""

#. type: heading **
#: applications/emacs/init.org:113
#, no-wrap
msgid "embark"
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:115
#, no-wrap
msgid ""
"(use-package embark\n"
"  :ensure t\n"
"  :bind\n"
"  ((\"C-.\" . embark-act)         ;; pick some comfortable binding\n"
"   (\"C-;\" . embark-dwim)        ;; good alternative: M-.\n"
"   (\"C-h B\" . embark-bindings)) ;; alternative for `describe-bindings'"
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:122
#, no-wrap
msgid ":init"
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:124
#, no-wrap
msgid ""
";; Optionally replace the key help with a completing-read interface\n"
"(setq prefix-help-command #'embark-prefix-help-command)"
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:127
#, no-wrap
msgid ""
";; Show the Embark target at point via Eldoc. You may adjust the\n"
";; Eldoc strategy, if you want to see the documentation from\n"
";; multiple providers. Beware that using this can be a little\n"
";; jarring since the message shown in the minibuffer can be more\n"
";; than one line, causing the modeline to move up and down:"
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:133
#, no-wrap
msgid ""
";; (add-hook 'eldoc-documentation-functions #'embark-eldoc-first-target)\n"
";; (setq eldoc-documentation-strategy #'eldoc-documentation-compose-eagerly)"
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:136
#, no-wrap
msgid ""
";; Add Embark to the mouse context menu. Also enable `context-menu-mode'.\n"
";; (context-menu-mode 1)\n"
";; (add-hook 'context-menu-functions #'embark-context-menu 100)"
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:140
#, no-wrap
msgid ":config"
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:142
#, no-wrap
msgid ""
";; Hide the mode line of the Embark live/completions buffers\n"
"(add-to-list 'display-buffer-alist\n"
"             '(\"\\\\`\\\\*Embark Collect "
"\\\\(Live\\\\|Completions\\\\)\\\\*\"\n"
"               nil\n"
"               (window-parameters (mode-line-format . none)))))"
msgstr ""

#. type: heading *
#: applications/emacs/init.org:149
#, no-wrap
msgid "version control system"
msgstr ""

#. type: heading **
#: applications/emacs/init.org:150
#, no-wrap
msgid "git"
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:152
#, no-wrap
msgid ""
"(use-package magit\n"
"  :ensure t\n"
"  :bind\n"
"  ((\"C-x g\" . magit-status)))"
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:157
#, no-wrap
msgid ""
"(use-package diff-hl\n"
"  :ensure t\n"
"  :init\n"
"  (global-diff-hl-mode)\n"
"  (diff-hl-flydiff-mode)\n"
"  (add-hook 'dired-mode-hook 'diff-hl-dired-mode)\n"
"  (add-hook 'magit-post-refresh-hook 'diff-hl-magit-post-refresh))"
msgstr ""

#. type: heading *
#: applications/emacs/init.org:166
#, no-wrap
msgid "org"
msgstr ""

#. type: heading **
#: applications/emacs/init.org:168
#, no-wrap
msgid "Semantic Line Breaks"
msgstr ""

#. type: paragraph
#: applications/emacs/init.org:170
msgid ""
"[[https://sembr.org/][Semantic Line Breaks (SemBr)]] is a writing convention "
"where line breaks are placed at logical boundaries in sentences, such as "
"after punctuation marks or between phrases.  This makes diffs more "
"meaningful in version control and improves readability without affecting the "
"rendered output."
msgstr ""

#. type: paragraph
#: applications/emacs/init.org:176
msgid ""
"The recommended line length is around 80 characters.  I set this as an upper "
"limit in the editor to prevent lines from becoming unnecessarily long."
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:181
#, no-wrap
msgid ""
"(add-hook 'text-mode-hook\n"
"          (lambda ()\n"
"            (auto-fill-mode 1)\n"
"            (setq fill-column 80)))"
msgstr ""

#. type: heading **
#: applications/emacs/init.org:187
#, no-wrap
msgid "org-capture"
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:189
#, no-wrap
msgid "(global-set-key (kbd \"C-c c\") 'org-capture)"
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:191
#, no-wrap
msgid "(setq org-root \"~/dropbox/org/\")"
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:193
#, no-wrap
msgid ""
"(setq org-capture-templates\n"
"      `((\"t\" \"Todo\" entry\n"
"         (file+headline ,(concat org-root \"todo.org\") \"Tasks\")\n"
"         \"* TODO %?\\n  %i\\n  %a\")\n"
"        (\"j\" \"Journal\" entry\n"
"         (file+datetree ,(concat org-root \"journal.org\"))\n"
"         \"* %U\\n%?\\n  %i\\n  %a\")\n"
"        (\"f\" \"Fleeting\" entry\n"
"         (file ,(concat org-root \"fleeting.org\"))\n"
"         \"* %?\\n  %U\\n  %i\\n  %a\")))"
msgstr ""

#. type: heading **
#: applications/emacs/init.org:205
#, no-wrap
msgid "org-agenda"
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:207
#, no-wrap
msgid "(global-set-key (kbd \"C-c a\") 'org-agenda)"
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:209
#, no-wrap
msgid "(setq org-agenda-files '(\"~/dropbox/org\"))"
msgstr ""

#. type: heading **
#: applications/emacs/init.org:212
#, no-wrap
msgid "org-roam"
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:214
#, no-wrap
msgid ""
"(use-package org-roam\n"
"  :ensure t\n"
"  :custom\n"
"  (org-roam-directory \"~/dropbox/org-roam\")\n"
"  (org-roam-db-location \"~/.local/share/org-roam.db\")\n"
"  :bind\n"
"  ((\"C-c n l\" . org-roam-buffer-toggle)\n"
"   (\"C-c n f\" . org-roam-node-find)\n"
"   (\"C-c n g\" . org-roam-graph)\n"
"   (\"C-c n i\" . org-roam-node-insert)\n"
"   (\"C-c n c\" . org-roam-capture)\n"
"   (\"C-c n j\" . org-roam-dailies-capture-today))\n"
"  :config\n"
"  (setq org-roam-capture-templates\n"
"        '((\"p\" \"permanent\" plain \"%?\"\n"
"           :target (file+head \"permanent/${slug}.org\" \"#+title: "
"${title}\\n\")\n"
"           :unnarrowed t)\n"
"          (\"l\" \"literature\" plain \"%?\"\n"
"           :target (file+head \"literature/${title}.org\" \"#+title: "
"${title}\\n\")\n"
"           :unnarrowed t)))\n"
"  (setq org-roam-node-display-template\n"
"        (concat \"${title:*} \"\n"
"                (propertize \"${tags:10}\" 'face 'org-tag)))\n"
"  (org-roam-db-autosync-mode)\n"
"  (require 'org-roam-protocol)\n"
"  )"
msgstr ""

#. type: heading *
#: applications/emacs/init.org:243
#, no-wrap
msgid "misc"
msgstr ""

#. type: heading **
#: applications/emacs/init.org:244
#, no-wrap
msgid "vundo"
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:246
#, no-wrap
msgid ""
"(use-package vundo\n"
"  :ensure t\n"
"  :bind ((\"C-x u\" . vundo))\n"
"  :config\n"
"  (setq vundo-glyph-alist vundo-unicode-symbols))"
msgstr ""

#. type: heading **
#: applications/emacs/init.org:253
#, no-wrap
msgid "consult"
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:255
#, no-wrap
msgid ""
";; Example configuration for Consult\n"
"(use-package consult\n"
"  :ensure t\n"
"  ;; Replace bindings. Lazily loaded by `use-package'.\n"
"  :bind (;; C-c bindings in `mode-specific-map'\n"
"         (\"C-c M-x\" . consult-mode-command)\n"
"         (\"C-c h\" . consult-history)\n"
"         (\"C-c k\" . consult-kmacro)\n"
"         (\"C-c m\" . consult-man)\n"
"         (\"C-c i\" . consult-info)\n"
"         ([remap Info-search] . consult-info)\n"
"         ;; C-x bindings in `ctl-x-map'\n"
"         (\"C-x M-:\" . consult-complex-command)     ;; "
"orig. repeat-complex-command\n"
"         (\"C-x b\" . consult-buffer)                ;; "
"orig. switch-to-buffer\n"
"         (\"C-x 4 b\" . consult-buffer-other-window) ;; "
"orig. switch-to-buffer-other-window\n"
"         (\"C-x 5 b\" . consult-buffer-other-frame)  ;; "
"orig. switch-to-buffer-other-frame\n"
"         (\"C-x t b\" . consult-buffer-other-tab)    ;; "
"orig. switch-to-buffer-other-tab\n"
"         (\"C-x r b\" . consult-bookmark)            ;; "
"orig. bookmark-jump\n"
"         (\"C-x p b\" . consult-project-buffer)      ;; "
"orig. project-switch-to-buffer\n"
"         ;; Custom M-# bindings for fast register access\n"
"         (\"M-#\" . consult-register-load)\n"
"         (\"M-'\" . consult-register-store)          ;; "
"orig. abbrev-prefix-mark (unrelated)\n"
"         (\"C-M-#\" . consult-register)\n"
"         ;; Other custom bindings\n"
"         (\"M-y\" . consult-yank-pop)                ;; orig. yank-pop\n"
"         ;; M-g bindings in `goto-map'\n"
"         (\"M-g e\" . consult-compile-error)\n"
"         (\"M-g f\" . consult-flymake)               ;; Alternative: "
"consult-flycheck\n"
"         (\"M-g g\" . consult-goto-line)             ;; orig. goto-line\n"
"         (\"M-g M-g\" . consult-goto-line)           ;; orig. goto-line\n"
"         (\"M-g o\" . consult-outline)               ;; Alternative: "
"consult-org-heading\n"
"         (\"M-g m\" . consult-mark)\n"
"         (\"M-g k\" . consult-global-mark)\n"
"         (\"M-g i\" . consult-imenu)\n"
"         (\"M-g I\" . consult-imenu-multi)\n"
"         ;; M-s bindings in `search-map'\n"
"         (\"M-s d\" . consult-find)                  ;; Alternative: "
"consult-fd\n"
"         (\"M-s c\" . consult-locate)\n"
"         (\"M-s g\" . consult-grep)\n"
"         (\"M-s G\" . consult-git-grep)\n"
"         (\"M-s r\" . consult-ripgrep)\n"
"         (\"M-s l\" . consult-line)\n"
"         (\"M-s L\" . consult-line-multi)\n"
"         (\"M-s k\" . consult-keep-lines)\n"
"         (\"M-s u\" . consult-focus-lines)\n"
"         ;; Isearch integration\n"
"         (\"M-s e\" . consult-isearch-history)\n"
"         :map isearch-mode-map\n"
"         (\"M-e\" . consult-isearch-history)         ;; "
"orig. isearch-edit-string\n"
"         (\"M-s e\" . consult-isearch-history)       ;; "
"orig. isearch-edit-string\n"
"         (\"M-s l\" . consult-line)                  ;; needed by "
"consult-line to detect isearch\n"
"         (\"M-s L\" . consult-line-multi)            ;; needed by "
"consult-line to detect isearch\n"
"         ;; Minibuffer history\n"
"         :map minibuffer-local-map\n"
"         (\"M-s\" . consult-history)                 ;; "
"orig. next-matching-history-element\n"
"         (\"M-r\" . consult-history))                ;; "
"orig. previous-matching-history-element"
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:312
#, no-wrap
msgid ""
";; Enable automatic preview at point in the *Completions* buffer. This is\n"
";; relevant when you use the default completion UI.\n"
":hook (completion-list-mode . consult-preview-at-point-mode)"
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:316
#, no-wrap
msgid ""
";; The :init configuration is always executed (Not lazy)\n"
":init"
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:319
#, no-wrap
msgid ""
";; Tweak the register preview for `consult-register-load',\n"
";; `consult-register-store' and the built-in commands.  This improves the\n"
";; register formatting, adds thin separator lines, register sorting and "
"hides\n"
";; the window mode line.\n"
"(advice-add #'register-preview :override #'consult-register-window)\n"
"(setq register-preview-delay 0.5)"
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:326
#, no-wrap
msgid ""
";; Use Consult to select xref locations with preview\n"
"(setq xref-show-xrefs-function #'consult-xref\n"
"      xref-show-definitions-function #'consult-xref)"
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:330
#, no-wrap
msgid ""
";; Configure other variables and modes in the :config section,\n"
";; after lazily loading the package.\n"
":config"
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:334
#, no-wrap
msgid ""
";; Optionally configure preview. The default value\n"
";; is 'any, such that any key triggers the preview.\n"
";; (setq consult-preview-key 'any)\n"
";; (setq consult-preview-key \"M-.\")\n"
";; (setq consult-preview-key '(\"S-<down>\" \"S-<up>\"))\n"
";; For some commands and buffer sources it is useful to configure the\n"
";; :preview-key on a per-command basis using the `consult-customize' "
"macro.\n"
"(consult-customize\n"
" consult-theme :preview-key '(:debounce 0.2 any)\n"
" consult-ripgrep consult-git-grep consult-grep consult-man\n"
" consult-bookmark consult-recent-file consult-xref\n"
" consult--source-bookmark consult--source-file-register\n"
" consult--source-recent-file consult--source-project-recent-file\n"
" ;; :preview-key \"M-.\"\n"
" :preview-key '(:debounce 0.4 any))"
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:350
#, no-wrap
msgid ""
";; Optionally configure the narrowing key.\n"
";; Both < and C-+ work reasonably well.\n"
"(setq consult-narrow-key \"<\") ;; \"C-+\""
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:354
#, no-wrap
msgid ""
"  ;; Optionally make narrowing help available in the minibuffer.\n"
"  ;; You may want to use `embark-prefix-help-command' or which-key "
"instead.\n"
"  ;; (keymap-set consult-narrow-map (concat consult-narrow-key \" ?\") "
"#'consult-narrow-help)\n"
")"
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:361
#, no-wrap
msgid ""
";; Consult users will also want the embark-consult package.\n"
"(use-package embark-consult\n"
"  :ensure t ; only need to install it, embark loads it after consult if "
"found\n"
"  :hook\n"
"  (embark-collect-mode . consult-preview-at-point-mode))"
msgstr ""

#. type: heading **
#: applications/emacs/init.org:368
#, no-wrap
msgid "Others"
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:370
#, no-wrap
msgid "(which-key-mode)"
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:372
#, no-wrap
msgid "(setq-default indent-tabs-mode nil)"
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:374
#, no-wrap
msgid "(require 'org-tempo)"
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:376
#, no-wrap
msgid ""
"(org-babel-do-load-languages\n"
" 'org-babel-load-languages\n"
" '((shell . t)))"
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:380
#, no-wrap
msgid "(setq org-src-preserve-indentation t)"
msgstr ""

#. type: paragraph in src
#: applications/emacs/init.org:382
#, no-wrap
msgid ""
"(use-package nix-mode\n"
"  :ensure t\n"
"  :mode \"\\\\.nix\\\\'\")"
msgstr ""

#. type: heading **
#: applications/emacs/early-init.org:3
#, no-wrap
msgid "disable some bars"
msgstr ""

#. type: paragraph in src
#: applications/emacs/early-init.org:5
#, no-wrap
msgid ""
"(push '(tool-bar-lines . 0) default-frame-alist)\n"
"(push '(vertical-scroll-bars) default-frame-alist)"
msgstr ""

#. type: heading **
#: applications/emacs/early-init.org:9
#, no-wrap
msgid "turn off the annoying bell"
msgstr ""

#. type: paragraph in src
#: applications/emacs/early-init.org:11
#, no-wrap
msgid "(setq ring-bell-function 'ignore)"
msgstr ""

#. type: heading **
#: applications/emacs/early-init.org:14
#, no-wrap
msgid "disable backup files"
msgstr ""

#. type: paragraph in src
#: applications/emacs/early-init.org:16
#, no-wrap
msgid ""
"(setq make-backup-files nil)\n"
"(setq auto-save-default nil)"
msgstr ""
